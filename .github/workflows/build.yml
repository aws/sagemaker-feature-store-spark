name: Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      id-token: write
      contents: read

    steps:

      # Set up and Install required dependencies
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      # Check out code from PR and initiate build process
      - uses: actions/checkout@v3
      - name: Build
        run: |
          echo Build started on `date`
          echo Verifying scala package build, code format and test coverage
          cd scala-spark-sdk
          sbt scalafmtCheckAll jacoco
          cd ..
          echo Scala pacakge build verification finished
          echo Packaging pyspark library according to setup.py
          cd pyspark-sdk
          python setup.py sdist
          tox
          cd ..
          echo Packaging finished, preparing artifacts for the integration tests
          mkdir processedArtifacts
          cp -R pyspark-sdk/integration_test processedArtifacts
          cp -R pyspark-sdk/dist processedArtifacts

      # Upload processed artifacts to be used for running the integration tests in subsequent integration tests workflow
      - uses: actions/upload-artifact@v3
        with:
          name: processedArtifacts
          path: processedArtifacts/

  integration_test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pull-requests: write
      id-token: write
      contents: write
      actions: read

    steps:

      # Set up and install required dependencies
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade boto3

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GithubSession

      # Download processed artifacts generated from build workflow
      - name: 'Download Build Artifacts'
        uses: actions/github-script@v6
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "processedArtifacts"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/processedArtifacts.zip', Buffer.from(download.data));

      # Unzip the build artifacts and run integration tests
      - name: Run Integration Tests
        run: |
          unzip processedArtifacts.zip
          cd integration_test
          chmod +x run-spark-integration-test
          ./run-spark-integration-test
